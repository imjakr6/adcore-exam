{"version":3,"sources":["CreateNode.js","DeleteNode.js","UpdateNode.js","App.js","reportWebVitals.js","index.js"],"names":["CreateNode","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","state","id","parent","data","onSubmit","console","log","description","read_only","this","className","vaule","placeholder","onChange","style","width","height","marginLeft","Component","DeleteNode","UpdateNode","App","loading","root","children","createNode","deleteNode","updateNode","getRoot","a","fetch","response","json","body","status","Error","message","toggleCreateNode","toggleDeleteNode","toggleUpdateNode","node","axios","post","then","catch","error","exportNode","renderForeignObjectNode","nodeDatum","foreignObjectProps","toggleNode","border","backgroundColor","textAlign","res","err","x","orientation","depthFactor","nodeSize","y","zoom","renderCustomNodeElement","rd3tProps","separation","nonSiblings","siblings","rootNodeClassName","branchNodeClassName","translate","marginRight","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fedd4bfe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CreateNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      parent: \"\",\r\n      read_only: \"0\"\r\n    }\r\n  }\r\n\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null || this.state.parent === null){\r\n      console.log(\"need id and parent to make a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n\r\n    render() {\r\n      const {id, name, description, parent, read_only} = this.state;\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"new-node-container d-flex\">\r\n                <div className= \"new-node-container-col d-flex flex-column\">\r\n                        <label>Node ID: </label>\r\n                        <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                        <label className=\"pt-2\">Node Name: </label>\r\n                        <input name=\"name\" vaule={name} placeholder=\"Node Name\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div className= \"new-node-container-col d-flex flex-column px-2\">\r\n                    <label>Node Description: </label>\r\n                    <input name=\"description\" vaule={description} placeholder=\"Node Description\" onChange={this.handleChange}></input>\r\n                    <label className=\"pt-2\">Parent: </label>\r\n                    <input name=\"parent\" vaule={parent} placeholder=\"Node Name\" onChange={this.handleChange}></input>\r\n                 \r\n                </div>\r\n                <div className= \"new-node-container-col d-flex pt-4\">\r\n                    <label style={{width: \"100px\"}}>Read Only: </label>\r\n                    <input name=\"read_only\" checked={read_only} className=\"mt-1\" type=\"checkbox\" placeholder=\"Read Only\" onChange={this.handleChange}></input>\r\n                    <button style={{height: 30, width: 100, marginLeft: 10}}>Add Node</button>\r\n                </div>\r\n          </div>\r\n          </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default CreateNode;","import React, { Component } from 'react';\r\n\r\nclass DeleteNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n    }\r\n  }\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null){\r\n      console.log(\"need id to delete a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n    render() {\r\n      const {id} = this.state;\r\n\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"new-node-container d-flex\">\r\n                <div className= \"new-node-container-col d-flex flex-column\">\r\n                        <label>Node ID: </label>\r\n                        <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div className= \"new-node-container-col d-flex pt-4\">\r\n                    <button style={{height: 30, marginLeft: 10}}>Delete Node</button>\r\n                </div>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default DeleteNode;","import React, { Component } from 'react';\r\n\r\nclass UpdateNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\"\r\n    }\r\n  }\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null){\r\n      console.log(\"need id to update a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n    render() {\r\n      const {id, name} = this.state;\r\n\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"new-node-container d-flex\">\r\n                <div className= \"new-node-container-col d-flex flex-column\">\r\n                        <label >Node ID: </label>\r\n                        <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                        <label className=\"pt-2\">Node Name: </label>\r\n                        <input name=\"name\" vaule={name} placeholder=\"Node Name\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div className= \"new-node-container-col d-flex pt-4\">\r\n                    <button style={{height: 30, marginLeft: 10}}>Update Node</button>\r\n                </div>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default UpdateNode;","import React, { Component } from 'react';\nimport ReactTree from 'react-d3-tree';\nimport axios from 'axios';\n\nimport './App.css';\nimport CreateNode from './CreateNode';\nimport DeleteNode from './DeleteNode';\nimport UpdateNode from './UpdateNode';\n\nclass App extends Component {\n  state = {\n    loading: true,\n    root: {\n      id: \"0\",\n      name: \"root\",\n      description: \"root dec\",\n      read_only: 1,\n      children: []\n    },\n    createNode: false,\n    deleteNode: false,\n    updateNode: false\n  };\n\n  componentDidMount() {\n    this.getRoot()\n      .then(res => this.setState({ root: res.root, loading: false }))\n      .catch(err => console.log(err));\n  }\n\n  getRoot = async () => {\n    const response = await fetch('/get_tree');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  }\n\n  toggleCreateNode = () => {\n    this.setState({deleteNode: false, updateNode: false, createNode: !this.state.createNode})\n  }\n\n  toggleDeleteNode = () => {\n    this.setState({createNode: false, updateNode: false, deleteNode: !this.state.deleteNode})\n  }\n\n  toggleUpdateNode = () => {\n    this.setState({createNode: false, deleteNode: false, updateNode: !this.state.updateNode})\n  }\n\n  createNode = (data) => {\n      const {id, name, description, parent, read_only} = data;\n      const body = {\n      parent: parent, \n      node: {\n        id: id ?? \"\",\n        name: name ?? \"\",\n        description: description ?? \"\",\n        parent: parent ?? \"\",\n        read_only: read_only ?? \"\",\n      }\n    };\n\n    axios.post('/create_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  updateNode = (data) => {\n    const {id, name} = data;\n\n    const body = {id: id, name: name};\n    axios.post('/update_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  deleteNode = (data) => {\n    const {id} = data;\n    const body = {id: id};\n    console.log(data)\n    axios.post('/delete_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  exportNode = () => {\n    axios.post('/export_node')\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  renderForeignObjectNode = ({\n    nodeDatum,\n    toggleNode,\n    foreignObjectProps\n  }) => (\n    <g>\n      <foreignObject {...foreignObjectProps}>\n        <div style={{ border: \"1px solid black\", backgroundColor: \"#dedede\" }}>\n          <h1 style={{ textAlign: \"center\" }}>{nodeDatum.id}</h1>\n          <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name}</h3>\n          <h5 style={{ textAlign: \"center\" }}>{nodeDatum.description}</h5>\n        </div>\n      </foreignObject>\n    </g>\n  );\n\n  render() {\n    const {root, loading} = this.state;\n    const foreignObjectProps = { width: 150, height: 150, x: 0 };\n\n    if(!loading){\n      return (\n        <div className=\"page-container\">\n          <div className=\"tree-container\">\n            <ReactTree data={root} orientation={\"vertical\"} depthFactor={400} nodeSize={{x: 200, y:150}} zoom={0.35} \n              renderCustomNodeElement={(rd3tProps) => this.renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })}\n              separation={{nonSiblings: 1, siblings:1}} rootNodeClassName=\"node\" branchNodeClassName=\"node\" translate={{x:900, y:25}} //TODO: need to translate by calc\n              />\n          </div>\n          <div className=\"btn-container\">\n            <button style={{marginRight: 5}} onClick={this.toggleCreateNode}>Create</button>\n            <button style={{marginRight: 5}} onClick={this.toggleDeleteNode}>Delete</button>\n            <button style={{marginRight: 5}} onClick={this.toggleUpdateNode}>Update</button>\n            <button onClick={this.exportNode}>Export</button>\n            {this.state.createNode && <CreateNode onSubmit={(data) => this.createNode(data)}/>}\n            {this.state.deleteNode && <DeleteNode onSubmit={(data) => this.deleteNode(data)}/>}\n            {this.state.updateNode && <UpdateNode onSubmit={(data) => this.updateNode(data)}/>}\n\n\n          </div>\n        </div>\n      );\n    }\n    return (\n      <p>loading</p>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
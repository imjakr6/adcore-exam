{"version":3,"sources":["CreateNode.js","DeleteNode.js","UpdateNode.js","App.js","reportWebVitals.js","index.js"],"names":["CreateNode","props","handleChange","event","target","value","type","checked","console","log","name","setState","handleSubmit","state","id","parent","data","onSubmit","description","read_only","this","className","vaule","placeholder","onChange","style","width","height","marginLeft","Component","DeleteNode","UpdateNode","App","loading","tree","children","createNode","deleteNode","updateNode","toggleCreateNode","toggleDeleteNode","toggleUpdateNode","getTree","a","fetch","response","json","body","status","Error","message","resetTree","getNewTree","then","res","root","catch","err","node","axios","post","error","exportNode","options","fieldSeparator","useKeysAsHeaders","ExportToCsv","generateCsv","renderForeignObjectNode","nodeDatum","foreignObjectProps","backgroundColor","border","textAlign","x","orientation","depthFactor","nodeSize","y","zoom","renderCustomNodeElement","rd3tProps","separation","nonSiblings","siblings","rootNodeClassName","branchNodeClassName","translate","window","innerWidth","color","marginRight","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcf5213.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CreateNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      parent: \"\",\r\n      read_only: \"1\"\r\n    }\r\n  }\r\n\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    var value = target.type === 'checkbox' ? target.checked : target.value;\r\n    if(target.type === 'checkbox'){\r\n      value = value ? 1 : 0;\r\n    }\r\n    console.log(value)\r\n    const name = target.name;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null || this.state.parent === null){\r\n      console.log(\"need id and parent to make a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n\r\n  render() {\r\n    const {id, name, description, parent, read_only} = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"new-node-container d-flex\">\r\n              <div className= \"new-node-container-col d-flex flex-column\">\r\n                      <label>Node ID: </label>\r\n                      <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                      <label className=\"pt-2\">Node Name: </label>\r\n                      <input name=\"name\" vaule={name} placeholder=\"Node Name\" onChange={this.handleChange}></input>\r\n              </div>\r\n              <div className= \"new-node-container-col d-flex flex-column px-2\">\r\n                  <label>Node Description: </label>\r\n                  <input name=\"description\" vaule={description} placeholder=\"Node Description\" onChange={this.handleChange}></input>\r\n                  <label className=\"pt-2\">Parent ID: </label>\r\n                  <input name=\"parent\" vaule={parent} placeholder=\"Parent ID\" onChange={this.handleChange}></input>\r\n                \r\n              </div>\r\n              <div className= \"new-node-container-col d-flex pt-4\">\r\n                  <label style={{width: \"100px\"}}>Read Only: </label>\r\n                  <input name=\"read_only\" checked={read_only} className=\"mt-1\" type=\"checkbox\" placeholder=\"Read Only\" onChange={this.handleChange}></input>\r\n                  <button style={{height: 30, width: 100, marginLeft: 10}}>Add Node</button>\r\n              </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateNode;","import React, { Component } from 'react';\r\n\r\nclass DeleteNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n    }\r\n  }\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null){\r\n      console.log(\"need id to delete a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n    render() {\r\n      const {id} = this.state;\r\n\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"new-node-container d-flex\">\r\n                <div className= \"new-node-container-col d-flex flex-column\">\r\n                        <label>Node ID: </label>\r\n                        <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div className= \"new-node-container-col d-flex pt-4\">\r\n                    <button style={{height: 30, marginLeft: 10}}>Delete Node</button>\r\n                </div>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default DeleteNode;","import React, { Component } from 'react';\r\n\r\nclass UpdateNode extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\"\r\n    }\r\n  }\r\n  handleChange = (event) =>{\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if(this.state.id === null){\r\n      console.log(\"need id to update a new node\");\r\n      return;\r\n    }\r\n    var data = this.state;\r\n    this.props.onSubmit(data)\r\n  }\r\n    render() {\r\n      const {id, name} = this.state;\r\n\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"new-node-container d-flex\">\r\n                <div className= \"new-node-container-col d-flex flex-column\">\r\n                        <label >Node ID: </label>\r\n                        <input name=\"id\" vaule={id} placeholder=\"Node Id\" onChange={this.handleChange}></input>\r\n                        <label className=\"pt-2\">Node Name: </label>\r\n                        <input name=\"name\" vaule={name} placeholder=\"Node Name\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div className= \"new-node-container-col d-flex pt-4\">\r\n                    <button style={{height: 30, marginLeft: 10}}>Update Node</button>\r\n                </div>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default UpdateNode;","import React, { Component } from 'react';\nimport ReactTree from 'react-d3-tree';\nimport axios from 'axios';\n\nimport './App.css';\nimport CreateNode from './CreateNode';\nimport DeleteNode from './DeleteNode';\nimport UpdateNode from './UpdateNode';\nimport { ExportToCsv } from 'export-to-csv';\n\n\nclass App extends Component {\n  state = {\n    loading: true,\n    tree: {\n      id: \"0\",\n      name: \"root\",\n      description: \"root dec\",\n      read_only: 1,\n      children: []\n    },\n    createNode: false,\n    deleteNode: false,\n    updateNode: false\n  };\n\n  componentDidMount() {\n    this.getTree()\n      .then(res => this.setState({ tree: res.root, loading: false }))\n      .catch(err => console.log(err));\n  }\n\n  toggleCreateNode = () => {\n    this.setState({deleteNode: false, updateNode: false, createNode: !this.state.createNode})\n  }\n\n  toggleDeleteNode = () => {\n    this.setState({createNode: false, updateNode: false, deleteNode: !this.state.deleteNode})\n  }\n\n  toggleUpdateNode = () => {\n    this.setState({createNode: false, deleteNode: false, updateNode: !this.state.updateNode})\n  }\n\n  getTree = async () => {\n    const response = await fetch('/get_tree');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  }\n\n  resetTree = () => {\n    this.getNewTree()\n      .then(res => this.setState({ tree: res.root, loading: false }))\n      .catch(err => console.log(err))\n  }\n\n\n  getNewTree = async () => {\n    const response = await fetch('/reset_tree');\n    console.log(response)\n    const body = await response.json();\n    console.log(body.body)\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  }\n\n  createNode = (data) => {\n      const {id, name, description, parent, read_only} = data;\n      const body = {\n      parent: parent, \n      node: {\n        id: id ?? \"\",\n        name: name ?? \"\",\n        description: description ?? \"\",\n        parent: parent ?? \"\",\n        read_only: read_only ?? \"\",\n      }\n    };\n\n    axios.post('/create_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  updateNode = (data) => {\n    const {id, name} = data;\n\n    const body = {id: id, name: name};\n    axios.post('/update_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  deleteNode = (data) => {\n    const {id} = data;\n    const body = {id: id};\n    console.log(data)\n    axios.post('/delete_node', body)\n        .then(response => console.log({response}))\n        .catch(error => console.error('There was an error!', error));\n  }\n\n  \n  exportNode = async () => {\n    const options = { \n      fieldSeparator: ',',\n      useKeysAsHeaders: true,\n    };\n\n    const response = await fetch('/export_csv');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    // this.setState({ tree: res.root, loading: false })\n    console.log(body)\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(body);\n}\n\n  renderForeignObjectNode = ({\n    nodeDatum,\n    foreignObjectProps\n  }) => {\n    var backgroundColor = nodeDatum.read_only == 1 ? \"red\": \"#dedede\";\n    return(\n    <g>\n      <foreignObject {...foreignObjectProps}>\n        <div style={{ border: \"1px solid black\", backgroundColor: backgroundColor }}>\n          <h1 style={{ textAlign: \"center\" }}>{nodeDatum.id}</h1>\n          <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name}</h3>\n          <h5 style={{ textAlign: \"center\" }}>{nodeDatum.description}</h5>\n        </div>\n      </foreignObject>\n    </g>\n  )};\n\n  render() {\n    const {tree, loading} = this.state;\n    const foreignObjectProps = { width: 150, height: 150, x: 0 };\n\n    if(!loading){\n      return (\n        <div className=\"page-container\">\n          <div className=\"tree-container\">\n            <ReactTree data={tree} orientation={\"vertical\"} depthFactor={400} nodeSize={{x: 200, y:150}} zoom={0.3} \n              renderCustomNodeElement={(rd3tProps) => this.renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })}\n              separation={{nonSiblings: 1, siblings:1}} rootNodeClassName=\"node\" branchNodeClassName=\"node\" translate={{x:window.innerWidth / 2, y:25}} //TODO: need to translate by calc\n              />\n          </div>\n          <div className=\"btn-container\">\n            <h5 style={{color: \"red\"}}>RED NODES ARE READ-ONLY</h5>\n            <button style={{marginRight: 5}} onClick={this.toggleCreateNode}>Create</button>\n            <button style={{marginRight: 5}} onClick={this.toggleDeleteNode}>Delete</button>\n            <button style={{marginRight: 5}} onClick={this.toggleUpdateNode}>Update</button>\n            <button style={{marginRight: 5}} onClick={this.resetTree}>RESET TREE</button>\n            <button onClick={this.exportNode}>Export</button>\n            {this.state.createNode && <CreateNode onSubmit={(data) => this.createNode(data)}/>}\n            {this.state.deleteNode && <DeleteNode onSubmit={(data) => this.deleteNode(data)}/>}\n            {this.state.updateNode && <UpdateNode onSubmit={(data) => this.updateNode(data)}/>}\n\n\n          </div>\n        </div>\n      );\n    }\n    return (\n      <p>loading</p>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}